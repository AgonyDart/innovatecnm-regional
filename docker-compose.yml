# Use the official Docker Compose specification.
version: '3.8'

services:
  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2.0
    restart: always
    ports:
      - "${MQTT_PORT}:${MQTT_PORT}" # standard MQTT
      - "${MQTT_WS_PORT}:${MQTT_WS_PORT}" # WebSocket
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - app-network

  # Database
  db:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Backend (FastAPI + Data Ingestion & AI)
  backend:
    build: ./backend
    restart: always
    depends_on:
      - mosquitto
      - db
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - MQTT_BROKER_PORT=${MQTT_PORT}
      - DB_HOST=db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
    ports:
      # FIX: Map host port ${BACKEND_PORT} to container port 8000
      - "${BACKEND_PORT}:8000"
    networks:
      - app-network

  # Frontend (NextJs)
  frontend:
    build: ./frontend
    restart: always
    depends_on:
      - backend
    ports:
      # FIX: Map host port ${FRONTEND_PORT} to container port 3000
      - "${FRONTEND_PORT}:3000"
    environment:
      # FIX: This URL is used by the BROWSER, which is outside the Docker network.
      # It must point to localhost and the host port mapped to the backend.
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:${BACKEND_PORT}
    networks:
      - app-network

# Define a shared network for all services
networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
